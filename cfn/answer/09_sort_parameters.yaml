# 9. 先ほどのインスタンス作成に当たり，一気にパラメータが増えたため，
# "Metadata" の "Interface" を利用して，マネコン上での表示順を指定します．
# デフォルトだと，パラメータは論理名の昇順で並びますが，まずVPCの設定，次にサブネット,...のように
# グルーピング & 整列されている方が，わかりやすいですよね．
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Group and sort parameters displayed on management console with a Metadata section.
Metadata:
  # Interface (management console settings)
  AWS::CloudFormation::Interface:
    ParameterGroups:  # パラメータをグルーピングします．今回はNW関連，インスタンス関連というグルーピングにします．ここに記載していないパラメータは"Other parameters"としてグルーピングされ，最後に記載されます．
    - Label:
        default: Network Configuration  # パラメータグループの名前．マネコン上に表示される．
      Parameters:                       # グルーピングするパラメータの論理名．記載順に表示される．
      - VpcCidr
      - AZ
      - MyIp
    - Label:
        default: EC2 Instance Configuration
      Parameters:
      - LatestAMI
      - InstanceType
      - SSHKeyPair
      - Monitoring
      - Hibernation
    ParameterLabels:  # パラメータラベルとして，パラメータの論理名以外を利用したいときに設定します．
      LatestAMI:
        default: Describe AMI namespace from SSM parameter store (not AMI ID; "ami-xxx").


Resources:
  # VPC & Subnet
  TestVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: True
      EnableDnsSupport: True
      Tags:
      - Key: Name
        Value: TestVPC
  TestIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: TestIGW
  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref TestVPC
      InternetGatewayId: !Ref TestIGW
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AZ
      VpcId: !Ref TestVPC
      CidrBlock: !Select [0, !Cidr [!GetAtt TestVPC.CidrBlock, 1, 8]]
      Tags:
      - Key: Name
        Value: PublicSubnet
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TestVPC
      Tags:
      - Key: Name
        Value: PublicRouteTable
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachIGW
    Properties:
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref TestIGW
      DestinationCidrBlock: 0.0.0.0/0
  PublicRTandSubnetAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # EC2 Instance
  TestInstance:
    Type: AWS::EC2::Instance
    DependsOn: PublicRTandSubnetAssociation
    Properties:
      ImageId: !Ref LatestAMI
      InstanceType: !Ref InstanceType
      #SubnetId: !Ref PublicSubnet
      #SecurityGroupIds:
      #- !Ref TestSG
      KeyName: !Ref SSHKeyPair
      Monitoring: !Ref Monitoring
      NetworkInterfaces:
      - AssociatePublicIpAddress: true
        DeviceIndex: '0'
        GroupSet:
        - !Ref TestSG
        SubnetId: !Ref PublicSubnet
      #IamInstanceProfile: String
      #LaunchTemplate: String
      #SourceDestCheck: false
      HibernationOptions:
        Configured: !Ref Hibernation
      Tags:
      - Key: Name
        Value: TestInstance
      UserData:
        !Base64 |
          #!/bin/bash
          touch test_file

  # SG
  TestSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: SG for TestInstance.
        GroupName: TestSG
        VpcId: !Ref TestVPC
        SecurityGroupIngress:
        - Description: Allow SSH access from specific IP.
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIp
        SecurityGroupEgress:
        - Description: Allow HTTP access to Anywhere (IPv4).
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - Description: Allow HTTP access to Anywhere (IPv6).
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIpv6: ::/0
        - Description: Allow HTTPS access to Anywhere (IPv4).
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - Description: Allow HTTPS access to Anywhere (IPv6).
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIpv6: ::/0
        Tags:
        - Key: Name
          Value: Test-sg


Parameters:
  # NW Configuration
  VpcCidr:
    Description: CIDR for VPC (ex. 10.0.0.0/16)
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: (\d{1,3}\.){3}\d{1,3}/\d{1,2}
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  AZ:
    Description: Availability Zone where an instance is provisioned.
    Type: AWS::EC2::AvailabilityZone::Name
    Default: ap-northeast-1a
  MyIp:
    Description: IPv4 CIDR range allowed to access to public subnet via SSH (ex. 54.168.32.139/32).
    Type: String
    AllowedPattern: (\d{1,3}\.){3}\d{1,3}/\d{1,2}
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  
  # EC2 Instance Configuration
  LatestAMI:
    Type : AWS::SSM::Parameter::Value<String>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t1.micro, t2.nano, t2.micro, t2.small, t2.medium, t2.large, m1.small, m1.medium, m1.large, m1.xlarge, m2.xlarge, m2.2xlarge, m2.4xlarge, m3.medium, m3.large, m3.xlarge, m3.2xlarge, m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge, c1.medium, c1.xlarge, c3.large, c3.xlarge, c3.2xlarge, c3.4xlarge, c3.8xlarge, c4.large, c4.xlarge, c4.2xlarge, c4.4xlarge, c4.8xlarge, g2.2xlarge, g2.8xlarge, r3.large, r3.xlarge, r3.2xlarge, r3.4xlarge, r3.8xlarge, i2.xlarge, i2.2xlarge, i2.4xlarge, i2.8xlarge, d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge, hi1.4xlarge, hs1.8xlarge, cr1.8xlarge, cc2.8xlarge, cg1.4xlarge]
    ConstraintDescription: must be a valid EC2 instance type.
  SSHKeyPair:
    Description: Amazon EC2 Key Pair
    Type: AWS::EC2::KeyPair::KeyName
  Monitoring:
    Description: Specifies whether detailed monitoring is enabled (true) or not (false) for the instance.
    Type: String
    Default: false
    AllowedValues: [true, false]
  Hibernation:
    Description: Indicates whether an instance is enabled (true) or not (false) for hibernation.
    Type: String
    Default: false
    AllowedValues: [true, false]


# Outputsセクションは，本スタック内の種々の値を
# ほかのスタックにインポートする，CFNのマネコン (マネジメントコンソール) 上に表示するためのセクションです．
# 今回はマネコン上にインスタンスのパブリックIPアドレスを出力してみます．
Outputs:
  GlobalIpv4:
    Description: EC2 instances global ip address
    Value: !GetAtt TestInstance.PublicIp
